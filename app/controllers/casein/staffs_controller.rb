# Scaffolding generated by Casein v5.1.1.5

module Casein
  class StaffsController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Staffs'
      @staffs = Staff.order(sort_order(:name)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View staff'
      @staff = Staff.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new staff'
      @staff = Staff.new
    end

    def create
      @staff = Staff.new staff_params
    
      if @staff.save
        flash[:notice] = 'Staff created'
        redirect_to casein_staffs_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new staff'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update staff'
      
      @staff = Staff.find params[:id]
    
      if @staff.update_attributes staff_params
        flash[:notice] = 'Staff has been updated'
        redirect_to casein_staffs_path
      else
        flash.now[:warning] = 'There were problems when trying to update this staff'
        render :action => :show
      end
    end
 
    def destroy
      @staff = Staff.find params[:id]

      @staff.destroy
      flash[:notice] = 'Staff has been deleted'
      redirect_to casein_staffs_path
    end
  
    private
      
      def staff_params
        params.require(:staff).permit(:name, :biography, :role, :photo, :published_at, :workflow_state, :updated_at)
      end
  
  end
end
