# Scaffolding generated by Casein v5.1.1.5

module Casein
  class CoursesController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Courses'
  		@courses = Course.order(sort_order(:name)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View course'
      @course = Course.friendly.find params[:id]
      @photos = @course.photos
      @photo = @course.photos.build
    end
  
    def new
      @casein_page_title = 'Add a new course'
    	@course = Course.new
      @photos = @course.photos.build
    end

    def create
      @course = Course.new course_params
    
      if @course.save
        flash[:notice] = 'Course created'
        redirect_to casein_courses_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new course'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update course'
      
      @course = Course.friendly.find params[:id]
    
      if @course.update_attributes course_params
        flash[:notice] = 'Course has been updated'
        redirect_to casein_courses_path
      else
        flash.now[:warning] = 'There were problems when trying to update this course'
        render :action => :show
      end
    end
 
    def destroy
      @course = Course.friendly.find params[:id]

      @course.destroy
      flash[:notice] = 'Course has been deleted'
      redirect_to casein_courses_path
    end
  
    private
      
      def course_params
        params.require(:course).permit(:name, :description, :imageable, photos_attributes: [:id, :caption, :images])
      end

  end
end