# Scaffolding generated by Casein v5.1.1.5

module Casein
  class PhotosController < Casein::CaseinController
    # before_filter :current_imageable
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Photos'
  		@photos = Photo.order(sort_order(:caption)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View photo'
      @photo = Photo.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new photo'
    	@photo = Photo.new
    end

    def create
      # @photo = Photo.new photo_params
      photo_params[:images].each do |image|
        @photo = Photo.create(image: image, imageable_id: photo_params[:imageable_id], imageable_type: photo_params[:imageable_type])
        @photo.save
      end
 
      if @photo.save
        flash[:notice] = 'Photo created'
        redirect_to current_imageable_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new photo'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update photo'
      
      @photo = Photo.find params[:id]
    
      if @photo.update_attributes photo_params
        flash[:notice] = 'Photo has been updated'
        redirect_to casein_photos_path
      else
        flash.now[:warning] = 'There were problems when trying to update this photo'
        render :action => :show
      end
    end
 
    def destroy
      @photo = Photo.find params[:id]

      @photo.destroy
      flash[:notice] = 'Photo has been deleted'
      redirect_to casein_photos_path
    end
  
    private
      
      def photo_params
        params.require(:photo).permit(:caption, {:images => [] }, :image, :imageable_id, :imageable_type, :course_id)
      end

    def current_imageable_path
      current_page = request.fullpath.split('/')[1]
      
      if current_page != 'photos'
        resource = photo_params[:imageable_type].pluralize.downcase
        id = photo_params[:imageable_id]
        "/casein/#{resource}/#{id}"
      else
        return casein_photos_path
      end
    end

  end
end