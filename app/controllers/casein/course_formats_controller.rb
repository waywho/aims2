# Scaffolding generated by Casein v5.1.1.5

module Casein
  class CourseFormatsController < Casein::CaseinController
    before_filter :load_course_format, :only => [:show, :update, :destroy]
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Course formats'
      @course_formats = CourseFormat.order(sort_order(:title)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View course format'
      @photos = Photo.all
      @photo = Photo.new
    end
  
    def new
      @casein_page_title = 'Add a new course format'
      @course_format = CourseFormat.new
      @photo = @course_format.photos.build
    end

    def create
      @course_format = CourseFormat.new course_format_params
    
      if @course_format.save

        if params[:photos_attributes]
            params[:photos_attributes]['image'].each do |image|
            @course_format.photos.create(image: image)
        end
        flash[:notice] = 'Course format created'
        redirect_to casein_course_formats_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new course format'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update course format'
      
      
      respond_to do |format|
        
          if params[:submit]
            @course.submit!
          elsif params[:approve]
            @course.approve!
          elsif params[:reject]
            @course.reject!
          elsif params[:publish]
            @course.publish!
          elsif params[:unpublish]
            @course.unpublish!
          end

          if @course_format.update_attributes course_format_params
        
            format.html { redirect_to casein_course_format_path(@format), notice: "Course format has been updated. #{undo_link}" }
          format.js
          else
            flash.now[:warning] = 'There were problems when trying to update this course format'
          render :action => :show
          end
        end
     end
    end

    def update_multiple
      @course_formats = CourseFormat.where(id: course_format_params[:course_format_ids])

      if params[:publish]
        @course_formats.each do |course_format|
          course_format.publish!
        end
      elsif params[:delete]
          @course_formats.destroy_all
      end

      redirect_to casein_course_formats_path
    end
 
    def destroy

      @course_format.destroy

      @course_format.photos.each do |photo|
        photo.update_attributes(imageable_id: nil, imageable_type: nil)
      end
      flash[:notice] = 'Course format has been deleted'
      redirect_to casein_course_formats_path
    end
  
    private
      
      def course_format_params
        params.require(:course_format).permit(:title, :description, {:course_format_ids => []}, :workflow_state, :whats_new, :when_from, :when_to, :venue, :address1, :address2, :city, :county, :country, :post_code, photos_attributes: [:id, :caption, :image])
      end

      def load_course_format
        @course_format ||= CourseFormat.friendly.find params[:id]
      end

      def undo_link
        view_context.link_to("undo", revert_version_path(@course.versions.last), :method => :post).html_safe
      end
  
  end
end
