# Scaffolding generated by Casein v5.1.1.5

module Casein
  class DashboardsController < Casein::CaseinController
    
    require 'google/api_client'
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Dashboards'


      ga_client  = Google::APIClient.new

      ga_client.authorization = Signet::OAuth2::Client.new(
        :token_credential_uri => 'https://accounts.google.com/o/oauth2/token',
        :audience             => 'https://accounts.google.com/o/oauth2/token',
        :scope                => 'https://www.googleapis.com/auth/analytics.readonly',
        :issuer               => ENV['client_email'],
        :signing_key          => Google::APIClient::PKCS12.load_key('config/API_Project_4fc819d124ee.p12', 'notasecret')
      ).tap { |auth| auth.fetch_access_token! }

      api_method = ga_client.discovered_api('analytics','v3').data.ga.get


      # make queries
      @results = ga_client.execute(:api_method => api_method, :parameters => {
        'ids'        => 'ga:78025227',
        'start-date' => '60daysAgo',
        'end-date'   => Date.today.to_s,
        'dimension'  => 'ga:country,ga:city,ga:mobileDeviceModel,ga:mobileDeviceBranding'
        'metrics'    => 'ga:sessions,ga:users,ga:newUsers,ga:entrances,ga:pageviews,ga:uniquePageviews,ga:pageviewsPerSession,ga:avgSessionDuration,ga:timeOnPage'
      })
      # ,ga:city,ga:mobileDeviceModel,ga:country,ga:mobileDeviceBranding
      # puts result.data.rows.inspect
    end
  
   
  
    private
      
      def dashboard_params
        params.require(:dashboard).permit(:index)
      end
  
  
  end
end
