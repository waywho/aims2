# Scaffolding generated by Casein v5.1.1.5

module Casein
  class PagesController < Casein::CaseinController
    before_filter load_page, :only => [:show, :update, :destory]
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Pages'
      @pages = Page.order(sort_order(:title)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View page'
    end
  
    def new
      @casein_page_title = 'Add a new page'
      @page = Page.new
    end

    def create
      @page = Page.new page_params
    
      if @page.save
        flash[:notice] = 'Page created'
        redirect_to casein_pages_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new page'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update page'
    
      if @page.update_attributes page_params
        flash[:notice] = 'Page has been updated'
        redirect_to casein_pages_path
      else
        flash.now[:warning] = 'There were problems when trying to update this page'
        render :action => :show
      end
    end
 
    def destroy

      @page.destroy
      flash[:notice] = 'Page has been deleted'
      redirect_to casein_pages_path
    end
  
    private
      
      def page_params
        params.require(:page).permit(:title, :content, :workflow_state)
      end

      def load_page
        @page = Page.friendly.find params[:id]
      end
  
  end
end
