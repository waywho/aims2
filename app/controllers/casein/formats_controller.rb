# Scaffolding generated by Casein v5.1.1.5

module Casein
  class FormatsController < Casein::CaseinController
    before_filter :load_format, :only => [:show, :update, :destroy]
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Formats'
      @formats = Format.order(sort_order(:title)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View format'
      @photos = Photo.all
      @photo = Photo.new
    end
  
    def new
      @casein_page_title = 'Add a new format'
      @format = Format.new
    end

    def create
      @format = Format.new format_params
    
      if @format.save
        flash[:notice] = 'Format created'
        redirect_to casein_formats_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new format'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update format'
    
      if @format.update_attributes format_params
        flash[:notice] = 'Format has been updated'
        redirect_to casein_formats_path
      else
        flash.now[:warning] = 'There were problems when trying to update this format'
        render :action => :show
      end
    end
 
    def destroy

      @format.destroy
      flash[:notice] = 'Format has been deleted'
      redirect_to casein_formats_path
    end
  
    private
      
      def format_params
        params.require(:format).permit(:title, :description, :published_at, :workflow_state, :whats_new, :when_from, :when_to, :venue, :address1, :address2, :city, :county, :country, :post_code)
      end

      def load_format
        @format = Format.friendly.find params[:id]
      end
  
  end
end
